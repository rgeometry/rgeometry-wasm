initSidebarItems({"fn":[["abs","Returns the absolute value of the given number."],["eight_four_sum",""],["eight_one_sum",""],["eight_two_sum",""],["expansion_sum","Sums two expansions."],["expansion_sum_zeroelim1","Sums two expansions, eliminating zero components from the output expansion."],["expansion_sum_zeroelim2","Sums two expansions, eliminating zero components from the output expansion."],["fast_expansion_sum_zeroelim","Sums two expansions, eliminating zero components from the output expansion."],["fast_two_diff",""],["fast_two_diff_tail",""],["fast_two_sum",""],["fast_two_sum_tail",""],["four_four_sum",""],["four_one_product",""],["four_one_sum",""],["four_two_sum",""],["grow_expansion","Adds a scalar to an expansion."],["grow_expansion_zeroelim","Adds a scalar to an expansion, eliminating zero components from the output expansion."],["incircle","Adaptive exact 2D incircle test. Robust."],["incircle_exact",""],["incircle_fast","Approximate 2D incircle test. Non-robust version of [`incircle`]."],["incircle_slow",""],["incircleadapt",""],["insphere","Adaptive exact 3D insphere test. Robust."],["insphere_exact",""],["insphere_fast","Approximate 3D insphere test. Non-robust version of [`insphere`]."],["insphere_slow",""],["insphereadapt",""],["orient2d","Adaptive exact 2D orientation test.  Robust."],["orient2d_exact",""],["orient2d_fast","Approximate 2D orientation test. Non-robust version of [`orient2d`]."],["orient2d_slow",""],["orient2dadapt",""],["orient3d","Adaptive exact 3D orientation test. Robust."],["orient3d_exact",""],["orient3d_fast","Approximate 3D orientation test. Non-robust version of [`orient3d`]."],["orient3d_slow",""],["orient3dadapt",""],["scale_expansion_zeroelim","Multiply an expansion by a scalar, eliminating zero components from the output expansion."],["split",""],["square","Squaring can be done more quickly than [`two_product`]."],["square_tail",""],["two_diff",""],["two_diff_tail",""],["two_one_diff",""],["two_one_product",""],["two_one_sum",""],["two_product",""],["two_product_2presplit","Same as [`two_product`] where both of the inputs have already been split."],["two_product_presplit","Same as [`two_product`] where one of the inputs has already been split."],["two_product_tail",""],["two_square",""],["two_sum",""],["two_sum_tail",""],["two_two_diff",""],["two_two_product",""],["two_two_sum",""]]});